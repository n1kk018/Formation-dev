<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://cxf.apache.org/jaxws
http://cxf.apache.org/schemas/jaxws.xsd"
>
	
  <!-- VERSION JNDI -->
  <!-- 	
	<bean id="jmsConnectionFactory" 
	      class="org.springframework.jndi.JndiObjectFactoryBean">
          <property name="jndiName" value="java:comp/env/jms/ConnectionFactory" />
      </bean>
      
      <bean id="jmsDestination" 
	      class="org.springframework.jndi.JndiObjectFactoryBean">    
        <property name="jndiName" value="java:comp/env/jms/fileA" />
      </bean>
	-->
	<!-- VERSION non jndi , directement base sur activeMQ broker -->	
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
         <property name="brokerURL" value="tcp://localhost:61616" />    
  </bean>
           	
     
  	 <bean id="jmsDestination-A" class="org.apache.activemq.command.ActiveMQQueue">
    	<property name="physicalName" value="queue.A" />
  	</bean>	
  	
  	 <bean id="jmsDestination-B" class="org.apache.activemq.command.ActiveMQQueue">
    	<property name="physicalName" value="queue.B" />
  	</bean>	
		
<!-- this is the Message Driven POJO (MDP) or Message Driven Bean (MDB) -->
<bean id="myJmsListener" class="tp.MyJmsListener" >
   <property name="receivedMessages" ref="receivedMessages" />
</bean>

<bean id="receivedMessages" class="tp.ReceivedMessages" />

<bean id="jmsProducerTemplate" class="org.springframework.jms.core.JmsTemplate"> 
         <property name="connectionFactory" ref="jmsConnectionFactory" />
         <!-- <property name="defaultDestination" ref="jmsDestination-A" /> -->
         <property name="defaultDestination" ref="jmsDestination-B" /> 
 </bean>
 
 <bean id="myJmsQueueSender" class="tp.MyJmsQueueSender" >
        <property name="jmsTemplate" ref="jmsProducerTemplate" />
 </bean>


<!-- and this is the message listener container -->
<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
<property name="connectionFactory" ref="jmsConnectionFactory"/>
<property name="destination" ref="jmsDestination-A"/>
<property name="messageListener" ref="myJmsListener" />
</bean>		
		
	 <context:annotation-config/>  <!--  pour demander a Spring de tenir compte de @Inject , ....  -->
	
	<context:component-scan base-package="tp"/> <!--  pour indiquer a Spring quelles sont les classes a scanner pour trouver
	                                                                                                des annotations telles que @Named , @Inject ou .... -->

</beans>